from __future__ import absolute_import, unicode_literals

# _*_encoding:utf-8_*_
"""
Django settings for OldboyCRM project.

Generated by 'django-admin startproject' using Django 1.8.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!_ozu*fpy09_)o)kutimblfxqn6j9(q#57s6_q*dws!ef-lh*f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'crm',
    'teacher',
    'student',
    # 'djcelery',
    'django_celery_results',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'OldboyCRM.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS':True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'OldboyCRM.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'OldboyCRM',
        'HOST': '192.168.0.5',
        'PORT': '',
        'USER': 'root',
        'PASSWORD': '',
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/


STATIC_URL = '/static/'
STATICFILES_DIRS = ("%s/%s" % (BASE_DIR, "statics"), )


AUTH_USER_MODEL = 'crm.UserProfile'

LOGIN_URL = '/crm/login/'

ENROLL_DATA_DIR = "%s/enrolled_data" % BASE_DIR
CONSULT_DATA_DIR = "%s/consult_data" % BASE_DIR
HOMEWORK_DATA_DIR = "%s/homework_data" % BASE_DIR
SESSION_SAVE_EVERY_REQUEST = True
SESSION_COOKIE_AGE = 60*60*2
UPLOADCODE_DIR = "%s/stu_code" % BASE_DIR


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_USE_TLS = False
EMAIL_HOST = 'smtp.exmail.qq.com'
EMAIL_PORT = 25
EMAIL_HOST_USER = 'qiaojianlong@oldboyedu.com'
EMAIL_HOST_PASSWORD = 'qjl171012QJL'
DEFAULT_FROM_EMAIL = '老男孩IT教育<qiaojianlong@oldboyedu.com>'


perm_dic_teacher = {
    'teacher_view_teacher_dashboard': ['teacher_dashboard', 'GET', []],
    'teacher_view_classlist': ['classlist', 'GET', []],
    'teacher_view_courselist': ['courselist', 'GET', []],
    'teacher_view_courserecord': ['courserecord', 'GET', []],
    'teacher_edit_courserecord': ['courserecord', 'POST', []],
    'teacher_view_createcourse': ['createcourse', 'GET', []],
    'teacher_edit_createcourse': ['createcourse', 'POST', []],
}

consultant_list = ['salers', 'marketers']


# ^^^ The above is required if you want to import from the celery
# library.  If you don't have this then `from celery.schedules import`
# becomes `proj.celery.schedules` in Python 2.x since it allows
# for relative imports by default.

# Celery settings

CELERY_BROKER_URL = 'amqp://guest:guest@localhost:5672/'

#: Only add pickle to this list if your broker is secured
#: from unwanted access (see userguide/security.html)
CELERY_ACCEPT_CONTENT = ['json']
CELERY_RESULT_BACKEND = 'db+sqlite:///results.sqlite'
CELERY_TASK_SERIALIZER = 'json'

# import djcelery
# djcelery.setup_loader()

# CELERY_RESULT_BACKEND = 'django-db'

# CELERY_BROKER_URL = 'amqp://hanyeluoxue:qjl171012@1localhost:5672/'
# CELERY_BROKER_URL = 'redis://127.0.0.1:6379/0'


# BROKER_HOST = "192.168.145.130"
# BROKER_PORT = 5672
# BROKER_USER = "guest"
# BROKER_PASSWORD = "guest"
# BROKER_VHOST = "/"

# CELERY_ALWAYS_EAGER = True
# CELERY_ACCEPT_CONTENT = ['json']
# CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

# ###########################################
# 初始化系统默认logs 只当系统是linux的时候.才进行相关的日志初始化工作
# LOGGING_stamdard_format = '[%(asctime)s][task_id:%(name)s][%(filename)s:%(lineno)d] [%(levelname)s]- %(message)s'
# LOGGING_simple_format = '[%(filename)s:%(lineno)d][%(levelname)s] %(message)s'
# LOGGING_request_format = '[%(asctime)s][%(status_code)s][%(request)s] %(message)s'
# REST_SESSION_LOGIN = False
# LOGGING = {
#    'version': 1,
#    'disable_existing_loggers': False,  # this fixes the problem
#    'formatters': {
#        'standard': {  # 详细
#            'format': LOGGING_stamdard_format
#        },
#        'simple': {  # 简单
#            'format': LOGGING_simple_format
#        },
#        'request': {  # 简单
#            'format': LOGGING_request_format
#        },
#    },
#    'filters': {},
#    'handlers': {
#        'mail_admins': {
#            'level': 'ERROR',
#            'class': 'django.utils.log.AdminEmailHandler',
#            'include_html': True,
#        },
#        'console':{
#            'level': 'INFO',
#            'class': 'logging.StreamHandler',  # 打印到前台
#            'formatter': 'simple'
#        },
#        'default': {
#            'level':'DEBUG',
#            'class':'logging.handlers.RotatingFileHandler',
#            'filename': os.path.join(BASE_DIR+'/logs/','all.log'),
#
#            'maxBytes': 1024*1024*10,
#            'backupCount': 5,
#            'formatter':'standard',
#       'request': {
#
#            'level':'DEBUG',
#            'class':'logging.handlers.RotatingFileHandler',
#            'filename': os.path.join(BASE_DIR+'/logs/','request.log'),
#
#            'maxBytes': 1024*1024*10,
#            'backupCount': 5,
#            'formatter':'request',
#        },
#        'db': {
#            'level':'DEBUG',
#            'class':'logging.handlers.RotatingFileHandler',
#
#
#            'maxBytes': 1024*1024*10,
#            'backupCount': 5,
#            'formatter':'standard',
#        },
#
#    'loggers': {
#        'django': {
#            'handlers': ['default','console'],
#            'propagate': False,
#            'level': 'DEBUG',
#        },
#        'django.request': {
#            'handlers': ['request','default'],
#            'level': 'DEBUG',
#            'propagate': False,
#        },
#        'django.db.backends':{
#            'handlers': ['db'],
#            'level': 'DEBUG',
#            'propagate': False
#        },
#    }
# }
#
# '''
# try:
#    from .settings_dev import *
# except Exception as e:
#    print(u'无法找到settings_dev文件.开启生产模式')
#    print(e.message)
# '''
